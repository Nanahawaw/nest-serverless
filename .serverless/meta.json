{
  "C:\\Users\\Nana\\Projects\\nest-serverless\\serverless.yml": {
    "versionFramework": "4.9.0",
    "servicePath": "C:\\Users\\Nana\\Projects\\nest-serverless\\serverless.yml",
    "serviceConfigFileName": "serverless.yml",
    "service": {
      "service": "nest-serverless-app",
      "provider": {
        "name": "aws",
        "runtime": "nodejs18.x",
        "region": "us-east-1",
        "memorySize": 512,
        "timeout": 10,
        "iamRoleStatements": [
          {
            "Effect": "Allow",
            "Action": [
              "dynamodb:*",
              "s3:*",
              "lambda:InvokeFunction",
              "cloudformation:DescribeStackResource"
            ],
            "Resource": "*"
          }
        ],
        "stage": "dev",
        "environment": {
          "DB_HOST": "localhost",
          "DB_PORT": "5432",
          "DB_USER": "postgres",
          "DB_PASS": "Julyjune200996",
          "DB_NAME": "serverless",
          "JWT_SECRET": "<REDACTED>"
        },
        "versionFunctions": true
      },
      "functions": {
        "api": {
          "handler": "dist/main.handler",
          "events": [
            {
              "path": "/",
              "method": "GET",
              "httpApi": null
            },
            {
              "path": "/{any+}",
              "method": "ANY",
              "httpApi": null
            }
          ],
          "name": "nest-serverless-app-dev-api"
        }
      }
    },
    "provider": {
      "name": "aws",
      "runtime": "nodejs18.x",
      "region": "us-east-1",
      "memorySize": 512,
      "timeout": 10,
      "iamRoleStatements": [
        {
          "Effect": "Allow",
          "Action": [
            "dynamodb:*",
            "s3:*",
            "lambda:InvokeFunction",
            "cloudformation:DescribeStackResource"
          ],
          "Resource": "*"
        }
      ],
      "stage": "dev",
      "environment": {
        "DB_HOST": "localhost",
        "DB_PORT": "5432",
        "DB_USER": "postgres",
        "DB_PASS": "Julyjune200996",
        "DB_NAME": "serverless",
        "JWT_SECRET": "<REDACTED>"
      },
      "versionFunctions": true
    },
    "dashboard": {
      "isEnabledForService": false,
      "requiredAuthentication": false,
      "orgFeaturesInUse": null,
      "orgObservabilityIntegrations": null,
      "serviceAppId": null,
      "serviceProvider": null,
      "instanceParameters": null
    },
    "error": {
      "message": "Access denied when storing the parameter \"/serverless-framework/deployment/s3-bucket\". Please check your permissions and try again. You have the following options:\n• Ensure you have permission to create SSM and S3 resources.\n• Use the \"provider.deploymentBucket\" field to specify an existing S3 bucket.\n• Manually create the S3 bucket and SSM parameter.\n\nFor more details, please refer to the documentation: https://www.serverless.com/framework/docs/guides/deployment-bucket\n\nOriginal error: User: arn:aws:iam::992382512047:user/awscli is not authorized to perform: ssm:PutParameter on resource: arn:aws:ssm:us-east-1:992382512047:parameter/serverless-framework/deployment/s3-bucket because no identity-based policy allows the ssm:PutParameter action",
      "code": "DEPLOYMENT_BUCKET_INSUFFICIENT_PERMISSIONS"
    },
    "serviceRawFile": "service: nest-serverless-app # Name of the service\r\n\r\nprovider:\r\n  name: aws\r\n  runtime: nodejs18.x # NodeJS version\r\n  region: us-east-1 # AWS region\r\n  memorySize: 512 # Memory size for the lambda function\r\n  timeout: 10 # Timeout for the lambda function\r\n  iamRoleStatements:\r\n    - Effect: Allow\r\n      Action:\r\n        - dynamodb:*\r\n        - s3:*\r\n        - lambda:InvokeFunction\r\n        - cloudformation:DescribeStackResource\r\n      Resource: '*'\r\n  stage: dev # Stage of the service\r\n  environment:\r\n    DB_HOST: ${env:DB_HOST}\r\n    DB_PORT: ${env:DB_PORT}\r\n    DB_USER: ${env:DB_USER}\r\n    DB_PASS: ${env:DB_PASS}\r\n    DB_NAME: ${env:DB_NAME}\r\n    JWT_SECRET: ${env:JWT_SECRET}\r\n\r\nfunctions:\r\n  api:\r\n    handler: dist/main.handler\r\n    events:\r\n      - httpApi:\r\n        path: /\r\n        method: GET\r\n      - httpApi:\r\n        path: /{any+}\r\n        method: ANY\r\n",
    "command": [
      "deploy"
    ],
    "options": {},
    "orgId": "4152ea75-2377-4be5-8a3d-7b5d9eb38a89",
    "orgName": "nansdevops",
    "userId": "yNQ6TJ3mPywNS9kW9C",
    "userName": "nansdevops",
    "serviceProviderAwsAccountId": "992382512047",
    "serviceProviderAwsCfStackId": null,
    "serviceProviderAwsCfStackCreated": null,
    "serviceProviderAwsCfStackUpdated": null,
    "serviceProviderAwsCfStackStatus": null,
    "serviceProviderAwsCfStackOutputs": null
  }
}